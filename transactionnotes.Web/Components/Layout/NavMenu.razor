@using System.Security.Claims
@using Microsoft.AspNetCore.Components.Authorization

<CascadingAuthenticationState>
    <div class="top-row ps-3 navbar navbar-dark">
        <div class="container-fluid">
            <a class="navbar-brand" href="">transactionnotes</a>
        </div>
    </div>

    <input type="checkbox" title="Navigation menu" class="navbar-toggler" />

    <div class="nav-scrollable" onclick="document.querySelector('.navbar-toggler').click()">
        <nav class="nav flex-column">
            <div class="nav-item px-3">
                <NavLink class="nav-link" href="" Match="NavLinkMatch.All">
                    <span class="bi bi-house-door-fill" aria-hidden="true"></span> Home
                </NavLink>
            </div>

            <div class="nav-item px-3">
                <NavLink class="nav-link" href="counter">
                    <span class="bi bi-plus-square-fill" aria-hidden="true"></span> Counter
                </NavLink>
            </div>

            <AuthorizeView Roles="transactionnotes-write">
                <div class="nav-item px-3">
                    <NavLink class="nav-link" href="weather">
                        <span class="bi bi-list-nested" aria-hidden="true"></span> Weather
                    </NavLink>
                </div>
			</AuthorizeView>
        </nav>
	</div>
</CascadingAuthenticationState>

@code {
    // private ClaimsPrincipal? User;
    // protected override async Task OnInitializedAsync()
    // {
    //     var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
    //     User = authState.User;
    //     var inRole = User?.IsInRole("transactionnotes-write");

    //     var roles = User?.Identities.SelectMany(i =>
    //     {
    //         return i.Claims
    //         .Where(c => c.Type == i.RoleClaimType)
    //         .Select(c => c.Value)
    //         .ToList();
    //     });
    }

}
